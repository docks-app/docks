//        ___          ___          ___                     ___          ___
//       /  /\        /  /\        /  /\       ___         /  /\        /  /\
//      /  /::\      /  /:/_      /  /:/_     /  /\       /  /::|      /  /:/_
//     /  /:/\:\    /  /:/ /\    /  /:/ /\   /  /:/      /  /:/:|     /  /:/ /\
//    /  /:/~/:/   /  /:/ /:/_  /  /:/ /::\ /__/::\     /  /:/|:|__  /  /:/ /:/_
//   /__/:/ /:/___/__/:/ /:/ /\/__/:/ /:/\:\\__\/\:\__ /__/:/ |:| /\/__/:/ /:/ /\
//   \  \:\/:::::/\  \:\/:/ /:/\  \:\/:/~/:/   \  \:\/\\__\/  |:|/:/\  \:\/:/ /:/
//    \  \::/~~~~  \  \::/ /:/  \  \::/ /:/     \__\::/    |  |:/:/  \  \::/ /:/
//     \  \:\       \  \:\/:/    \__\/ /:/      /__/:/     |  |::/    \  \:\/:/
//      \  \:\       \  \::/       /__/:/       \__\/      |  |:/      \  \::/
//       \__\/        \__\/        \__\/                   |__|/        \__\/

$resizable-min-width: 18rem;
$resizable-min-height: 10rem;
$resizable-border: 1px solid color(white);

$resizable-handle-width: 1.25rem;
$resizable-handle-groove-height: 2rem;
$resizable-handle-groove-percentage-width: 0.35;

$resizable-size-button-icon-size: 1.75rem;
$resizable-size-button-opacity: 1;
$resizable-size-button-hover-opacity: 1;
$resizable-size-button-active-opacity: 1;
$resizable-size-button-width: 2.5rem;

$resizable-width-indicator-font: 300 1rem/1 Consolas, monospace;
$resizable-width-indicator-padding: 0.25rem;
$resizable-width-indicator-unit-width: 1.25rem;
$resizable-width-indicator-unit-spacing: 0.15rem;
$resizable-width-indicator-color: rgba(color(white), 0.75);
$resizable-width-indicator-unit-transparentize: 0.6;

$resizable-width-transition-duration: 0.3s;
$resizable-default-transition-timing: 0.3s ease;

$resizable-smallest-size-button: 20rem;
$resizable-simply-breakpoint: ($resizable-smallest-size-button + $resizable-handle-width + $resizable-size-button-width);



//*
// A container that can be resized by dragging on a handle (`.resizable__handle`)
// with a contained iframe that shows the actual content. This allows the user to see how
// the design would actually behave at different viewport widths, and allows for fixed
// and absolute positioned elements to be displayed in a reasonable way.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable {
  // sizing
  margin: 0 auto;
  line-height: 0;
  width: 100%;
  max-width: 100%;
  min-width: calc(#{$resizable-min-width + $resizable-handle-width + $resizable-size-button-width} + 2px);
  flex: 0 0 auto;

  // @include before($resizable-simply-breakpoint) {
  //   padding-right: 0;
  //   width: 100% !important;
  // }

  ::-webkit-scrollbar {
    display: none;
  }

  > * {
    position: relative;
    padding-right: ($resizable-handle-width + $resizable-size-button-width);
  }
}

//*
// Provides a transition that smoothly moves the resizable container from one width
// to the next. This is not done by default as dragging the handle would appear broken.

// @style select

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable--is-transitioning-width {
  transition: width $resizable-width-transition-duration ease-in-out;
}



//*
// The wrapper (always full width) around the resizable module. This exists in order
// for there to be a predictable element on which to listen for the mousemove/
// touchmove events while dragging the handle.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__wrapper {
  display: flex;
  justify-content: stretch;
  background-color: color(slate);
  padding: 4rem 1.5rem 1.5rem;

  // &:after,
  // &:before {
  //   content: '';
  //   display: block;
  //   background: color(gray);
  //   flex: 1 1 0;
  // }
}



//*
// The contents of a resizable container. By default, this will be an iframe
// with a `src` pointing to the resource to be demonstrated.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__content {
  width: 100%;
  min-height: $resizable-min-height;
  transition: height 0.3s ease;
  overflow: hidden;
}



//*
// The handle by which to resize the container. Default style gives two small
// grooves in the middle of the handle that affords its draggability.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__handle {
  // positioning
  position: absolute;
  top: 0; right: $resizable-size-button-width;

  // sizing
  width: $resizable-handle-width;
  height: 100%;

  // backdrop
  cursor: col-resize;
  background: color(slate-light);

  &:hover,
  &:focus {
    outline: none;

    &:after { border-color: color(white); }
  }

  &:after {
    content: '';

    // positioning
    position: absolute;
    top: 50%; left: 50%;

    // sizing
    display: block;
    height: $resizable-handle-groove-height;
    width: ($resizable-handle-groove-percentage-width*$resizable-handle-width);
    margin-top: (-0.5*$resizable-handle-groove-height);
    margin-left: (-0.5*$resizable-handle-groove-percentage-width*$resizable-handle-width);

    // backdrop
    border-right: $resizable-border;
    border-left: $resizable-border;
  }

  // @include before($resizable-simply-breakpoint) {
  //   display: none;
  // }
}



//*
// A small notice that shows the current width of the (content of the) resizable
// module. This indicator slides in when the size changes (through the use of
// the `resizable__width-indicator--is-visible` variant).
//
// The indicator shows the width in both `px` and `em` values which are contained
// in the submodules `resizable__width-indicator__px` and `resizable__width-indicator__em`,
// respectively.

// @state --is-visible (select) - The indicator is currently being shown.

// @require %composite-layer

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__width-indicator {
  // extends
  // @extend %composite-layer;

  // positioning
  position: absolute;
  bottom: 100%; right: 0;

  // sizing
  display: inline-block;
  padding-bottom: 0.5rem;

  // type
  color: $resizable-width-indicator-color;
  font: $resizable-width-indicator-font;

  // backdrop
  opacity: 0.5;

  transition: opacity 0.3s ease;

  // @include before($resizable-simply-breakpoint) {
  //   display: none;
  // }
}

.resizable__width-indicator--is-visible { opacity: 1; }



//*
// A vertically-oriented set of buttons that resize the resizable module to
// predetermined widths. These widths have been set in the Javascript part of
// this module.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__size-buttons {
  // positioning
  position: absolute;
  right: 0; top: 0;

  // sizing
  display: flex;
  flex-direction: column;
  width: $resizable-size-button-width;
  height: 100%;
  border-radius: 0 $border-radius $border-radius 0;

  // backdrop
  background: color(slate-light);

  // @include before($resizable-simply-breakpoint) {
  //   display: none;
  // }
}



//*
// A single button that resizes the module.

// @state --is-active
// Indicates that this button has been pressed and that the user has not
// subsequently resized the module in some other way.

// @state --is-hidden
// Indicates that the button should be hidden because not enough screen space
// exists for its resize.

// @variant --small  - Resizes to a roughly smartphone-sized width.
// @variant --medium - Resizes to a roughly tablet-sized width.
// @variant --large  - Resizes to a roughly desktop-sized width.

// @since 0.0.1
// @author Chris Sauve (chrismsauve@gmail.com)

.resizable__size-button {
  flex-grow: 1;
  position: relative;
  cursor: pointer;

  &:after {
    content: '';

    // positioning
    position: absolute;
    top: 50%;
    left: 50%;

    // sizing
    display: block;
    width: $resizable-size-button-icon-size;
    height: $resizable-size-button-icon-size;
    margin: (-0.5*$resizable-size-button-icon-size) 0 0 (-0.5*$resizable-size-button-icon-size);

    // backdrop
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center center;
    opacity: $resizable-size-button-opacity;
    vector-effect: non-scaling-stroke;

    // transition
    transition: opacity $resizable-default-transition-timing;
  }

  &:hover:after,
  &:focus:after { opacity: $resizable-size-button-hover-opacity; }

  &:hover,
  &:focus,
  &:active,
  &.resizable__size-button--is-active {
    outline: none;
  }

  &.resizable__size-button--is-active:after,
  &:active:after {
    opacity: $resizable-size-button-active-opacity;
  }
}

.resizable__size-button--small:after { background-image: icon(screen-small); }
.resizable__size-button--medium:after { background-image: icon(screen-medium); }
.resizable__size-button--large:after { background-image: icon(screen-large); }
.resizable__size-button--full:after { background-image: icon(screen-full); }

.resizable__size-button--is-hidden {
  display: none;
}
