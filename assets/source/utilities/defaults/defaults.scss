//    ___  ___ ___ _  _   _ _  _____ ___
//   |   \| __| __/_\| | | | ||_   _/ __|
//   | |) | _|| _/ _ \ |_| | |__| | \__ \
//   |___/|___|_/_/ \_\___/|____|_| |___/
//
// =========================================================================================
// =========================================================================================
//
// This stylesheet decalres default values for common visual elements. Use this
// map in place of declaring variables, which could be slightly harder to remember
// the name of and present more of a risk of naming conflicts. To add a default,
// add a descriptive key name to the map that references a map that has an `ios`
// and an `android` key. Then, retrieve the value using `default($property, $platform)`,
// where platform defaults to iOS. If the property you are adding is also a valid
// CSS property (i.e., default borders or border radii), you can directly include
// that declaration in CSS using the mixin version of `default()`.



$DEFAULTS: (
  spacing: 1rem,
  border-radius: 4px,
  line-height: 1.3,
  control-size: rem(34),
  control-size--large: rem(42),
  control-padding: 0.75rem,
  box-shadow: 0 0 4px rgba(color(black), 0.3)
);



@function default($property) {
  @return map-get($DEFAULTS, $property);
}

@mixin default($property) {
  #{$property}: default($property);
}
