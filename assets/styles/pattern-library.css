@media screen and (max-width: 24.9375rem) {
  .media__helpers--hide-before-small {
    display: none; } }

@media screen and (min-width: 25.0625rem) {
  .media__helpers--hide-after-small {
    display: none; } }

.media__helpers--show-after-small {
  display: none; }
  @media screen and (min-width: 25.0625rem) {
    .media__helpers--show-after-small {
      display: block; } }

@media screen and (max-width: 37.4375rem) {
  .media__helpers--hide-before-medium {
    display: none; } }

@media screen and (min-width: 37.5625rem) {
  .media__helpers--hide-after-medium {
    display: none; } }

.media__helpers--show-after-medium {
  display: none; }
  @media screen and (min-width: 37.5625rem) {
    .media__helpers--show-after-medium {
      display: block; } }

@media screen and (max-width: 49.9375rem) {
  .media__helpers--hide-before-large {
    display: none; } }

@media screen and (min-width: 50.0625rem) {
  .media__helpers--hide-after-large {
    display: none; } }

.media__helpers--show-after-large {
  display: none; }
  @media screen and (min-width: 50.0625rem) {
    .media__helpers--show-after-large {
      display: block; } }

.helper--visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  margin: 0;
  padding: 0;
  background-color: white;
  min-height: 100vh; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

.icon {
  display: inline-block;
  stroke-width: 2; }

.icon--medium {
  height: 1.5rem;
  width: 1.5rem; }

.icon--large {
  height: 1.75rem;
  width: 1.75rem; }

.icon--action {
  height: 1.65rem;
  width: 1.65rem; }

.icon--hamburger {
  height: 1.65rem;
  width: 2rem;
  position: relative;
  cursor: pointer;
  opacity: 0.6;
  top: 0.2em;
  -webkit-transition: opacity 0.2s ease;
          transition: opacity 0.2s ease; }
  .icon--hamburger:hover {
    opacity: 1; }
  .icon--hamburger:before,
  .icon--hamburger:after {
    content: "";
    display: block;
    position: absolute;
    height: 4px;
    width: 100%;
    border-radius: 2px;
    background: #6e6f7a; }
  .icon--hamburger:before {
    top: 0; }
  .icon--hamburger:after {
    bottom: 0; }

.icon--hamburger__slice {
  height: 4px;
  width: 100%;
  border-radius: 2px;
  background: #6e6f7a;
  position: absolute;
  top: 50%;
  left: 0;
  margin-top: -2px; }

.icon--gray-darker {
  fill: #9c9da5;
  stroke: #9c9da5; }

.icon--close {
  position: relative;
  opacity: 0.6;
  -webkit-transition: opacity 0.2s ease;
          transition: opacity 0.2s ease;
  cursor: pointer; }
  .icon--close:hover {
    opacity: 1; }
  .icon--close:before,
  .icon--close:after {
    content: "";
    display: block;
    position: absolute;
    height: 4px;
    width: 140%;
    border-radius: 2px;
    background: #6e6f7a;
    top: 50%;
    left: 50%;
    margin-left: -70%;
    margin-top: -2px; }
  .icon--close:before {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
  .icon--close:after {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg); }

.icon--disclosure {
  height: 0.5rem;
  width: 0.5rem;
  -webkit-transform: rotate(45deg) translateY(-50%);
          transform: rotate(45deg) translateY(-50%);
  border-right: 2px solid #6e6f7a;
  border-bottom: 2px solid #6e6f7a;
  margin-left: 0.25rem; }

.grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.grid--vertically-centered {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.grid--align-right {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.grid--outside-spacing {
  margin: 1rem 0;
  padding: 0 1rem; }

.grid--space-between {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  .grid--space-between > .grid__item {
    -webkit-box-flex: 0;
    -webkit-flex: 0 1 auto;
        -ms-flex: 0 1 auto;
            flex: 0 1 auto; }

.grid__item {
  padding: 0 0.5rem;
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .grid__item:first-child {
    padding-left: 0; }
  .grid__item:last-child {
    padding-right: 0; }

.grid__item--no-flex {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto; }

.grid__item--half {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 50%;
      -ms-flex: 0 0 50%;
          flex: 0 0 50%; }

.content {
  padding: 0 1rem;
  margin: 1rem 0; }

.content--extra-vertical-spacing {
  margin: 3rem 0; }

body {
  background-color: #e3e4e6; }

.page {
  height: 100vh;
  max-height: 100vh;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.page__content,
.page__sidebar {
  position: relative; }

.page__content {
  width: 100%;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
          flex: 1 1 0px;
  z-index: 10;
  background: white; }
  .page__content > * {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }

.page__sidebar {
  z-index: 20;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto; }

body {
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  color: #33363a;
  font-family: Source Sans Pro, Helvetica Neue, Helvetica, Arial, sans-serif; }

button,
input {
  font-family: Source Sans Pro, Helvetica Neue, Helvetica, Arial, sans-serif; }

h1, h2, h3, h4, h5, h6, p, .type {
  margin: 0;
  font-size: inherit; }

.type--heading-1 {
  font-weight: 400;
  line-height: 1;
  color: #6e6f7a;
  font-size: 2.25rem; }

.type--heading-2 {
  font-weight: 400;
  color: #6e6f7a;
  font-size: 1.875rem; }

.type--heading-3 {
  font-weight: 400;
  line-height: 1;
  color: #6e6f7a;
  font-size: 1.5rem; }

.type--heading-4 {
  margin: 1rem auto 0.5rem;
  font-weight: 600;
  text-transform: uppercase;
  color: #d1d3d7;
  font-size: 0.875rem; }

.type--heading-5 {
  margin: 1rem auto 0.5rem;
  font-weight: 400;
  color: #6e6f7a;
  font-size: 1.25rem; }
  .type--heading-4 + .type--heading-5 {
    margin-top: 0.5rem; }
  .type--paragraph + .type--heading-5,
  .user-type + .type--heading-5 {
    margin-top: 1.5rem; }

.type--heading-bordered {
  padding-bottom: 1rem;
  margin-bottom: 1.3rem;
  border-bottom: 2px solid #e3e4e6; }
  .type--heading-bordered + .section {
    margin-top: -1rem; }

.type--paragraph {
  font-size: 1.25rem;
  line-height: 1.3;
  font-weight: 300;
  color: #1e1e1f; }
  .type--paragraph + p {
    margin-top: 0.75rem; }
  .type--paragraph > a {
    display: inline-block;
    text-decoration: none;
    color: #627990;
    font-weight: normal; }
    .type--paragraph > a > span {
      border-bottom: 2px solid #8cc2fb; }
    .type--paragraph > a > code {
      color: #627990;
      background-color: #e6ecf4;
      border-color: rgba(98, 121, 144, 0.15); }
  .type--paragraph code {
    font-family: Consolas, monospace;
    display: inline-block;
    padding: 0.05em 0.25em;
    font-size: 0.8em;
    background-color: #f2f2f3;
    color: #6e6f7a;
    border: 1px solid #e3e4e6;
    border-radius: 4px; }

.type--paragraph-small {
  font-size: 1.125rem; }

.type-container h1 {
  font-weight: 400;
  line-height: 1;
  color: #6e6f7a;
  font-size: 2.25rem; }

.type-container h2 {
  font-weight: 400;
  color: #6e6f7a;
  font-size: 1.875rem; }

.type-container h3 {
  font-weight: 400;
  line-height: 1;
  color: #6e6f7a;
  font-size: 1.5rem; }

.type-container h4 {
  margin: 1rem auto 0.5rem;
  font-weight: 600;
  text-transform: uppercase;
  color: #d1d3d7;
  font-size: 0.875rem; }

.type-container h5 {
  margin: 1rem auto 0.5rem;
  font-weight: 400;
  color: #6e6f7a;
  font-size: 1.25rem; }

.type-container p {
  font-size: 1.25rem;
  line-height: 1.3;
  font-weight: 300;
  color: #1e1e1f; }
  .type-container p + p {
    margin-top: 0.75rem; }
  .type-container p > a {
    display: inline-block;
    text-decoration: none;
    color: #627990;
    font-weight: normal; }
    .type-container p > a > span {
      border-bottom: 2px solid #8cc2fb; }
    .type-container p > a > code {
      color: #627990;
      background-color: #e6ecf4;
      border-color: rgba(98, 121, 144, 0.15); }
  .type-container p code {
    font-family: Consolas, monospace;
    display: inline-block;
    padding: 0.05em 0.25em;
    font-size: 0.8em;
    background-color: #f2f2f3;
    color: #6e6f7a;
    border: 1px solid #e3e4e6;
    border-radius: 4px; }

.type-container--small p {
  font-size: 1.125rem; }

.type--display {
  font-size: 1.3rem;
  margin-top: 0;
  font-weight: 500;
  line-height: 1; }

.type--margin-bottom {
  margin-bottom: 1rem; }

.type--subdued {
  color: #d1d3d7; }

.type--code {
  font-family: Consolas, monospace;
  font-size: 0.95em;
  word-wrap: break-word; }

::-moz-selection {
  background: #b7d6f6; }

::selection {
  background: #b7d6f6; }

.avatar {
  z-index: 10;
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  display: inline-block;
  background-color: #f1f1f1;
  border-radius: 4px;
  overflow: hidden;
  font-size: 1.25rem; }

.avatar__initials {
  z-index: 10;
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  color: #cfcfcf;
  font-size: 1em;
  line-height: 1;
  text-align: center;
  text-transform: uppercase; }

.avatar__image {
  z-index: 20;
  position: relative;
  height: 3rem;
  width: 3rem;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
          transition: opacity 0.3s ease;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  overflow: hidden; }

.avatar__image--is-visible {
  opacity: 1; }

.avatar__container {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  overflow: hidden;
  margin-right: -0.5rem !important;
  margin-bottom: -0.5rem !important;
  max-width: 10.5rem; }
  .avatar__container > .avatar {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem; }

.avatar__container--large {
  max-width: 14rem; }

.badge {
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  display: inline-block;
  padding: 0.15em 0.5em 0.25em;
  border-radius: 4px;
  background-color: #f2f2f3;
  font-size: 0.75em;
  line-height: 1.3;
  vertical-align: middle;
  color: #9c9da5; }

.badge--warning {
  background-color: #fdf7af;
  color: #857e32; }

.badge--new {
  background-color: #b7d6f6;
  color: #627990; }

.badge--secret {
  background-color: #6e6f7a;
  color: #e3e4e6; }

.badge--code {
  padding-bottom: 0;
  padding-top: 0.2em; }

.badge--standalone {
  font-size: 1rem; }

.badge__container {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  overflow: hidden;
  margin-right: -0.5rem !important;
  margin-bottom: -0.5rem !important; }
  .badge__container > .badge {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem; }

.docks-button {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 0 0.75rem;
  border-radius: 4px;
  background-color: #f2f2f3;
  border: none;
  cursor: pointer;
  opacity: 1;
  -webkit-transition: opacity 0.3s ease;
          transition: opacity 0.3s ease;
  font-size: 1.125rem;
  line-height: 2.125rem;
  color: #9c9da5;
  vertical-align: middle;
  text-decoration: none;
  white-space: nowrap; }
  .docks-button:focus,
  .docks-button:active {
    background-color: #e3e4e6;
    outline: none; }
  .docks-button > *:first-child {
    margin-right: 0.5rem; }

.docks-button--dark {
  background-color: #d1d3d7;
  color: #6e6f7a; }
  .docks-button--dark:focus,
  .docks-button--dark:active {
    background-color: #d1d3d7;
    color: #6e6f7a; }

.docks-button--is-disabled {
  opacity: 0.3; }

.docks-button__container {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  margin-right: -0.5rem !important;
  margin-bottom: -0.5rem !important; }
  .docks-button__container:after {
    content: "";
    display: table; }
  .docks-button__container > * {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 auto;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    margin-right: 0.5rem;
    margin-bottom: 0.5rem; }

.docks-button__container--fill-width {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start; }
  .docks-button__container--fill-width .docks-button,
  .docks-button__container--fill-width > *:not(.docks-button) {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 0%;
        -ms-flex: 1 0 0%;
            flex: 1 0 0%;
    min-width: -webkit-min-content;
    min-width: -moz-min-content;
    min-width: min-content; }

.docks-button__segmented-container {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex; }
  .docks-button__segmented-container > .docks-button {
    border-radius: 0; }
    .docks-button__segmented-container > .docks-button:not(:first-child) {
      border-left: none; }
    .docks-button__segmented-container > .docks-button:first-child {
      border-radius: 4px 0 0 4px; }
    .docks-button__segmented-container > .docks-button:last-child {
      border-radius: 0 4px 4px 0; }

.card {
  background-color: white;
  border-radius: 4px;
  overflow: hidden; }

.code-block {
  margin: 1rem 0;
  overflow: hidden;
  background: #f2f2f3;
  border-radius: 4px; }
  .code-block .docks-button {
    display: none; }

.code-block--condensed {
  margin-top: 0.5rem; }
  .code-block--condensed .code-block__code {
    padding-bottom: 0.5rem;
    font-size: 0.875rem; }
  .code-block--condensed:not(.code-block--with-header) .code-block__code {
    padding-top: 0.5rem; }

.code-block--full-width {
  margin-right: 0;
  margin-left: 0;
  border-radius: 0; }
  .content .code-block--full-width {
    margin-left: -1rem;
    margin-right: -1rem; }

.code-block--is-hidden:not(.code-block--with-demo) .code-block__toggler {
  background-color: #f2f2f3; }

.code-block--is-hidden .code-block__content {
  height: 0; }

.code-block__actions {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.code-block__header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0.5rem 1rem;
  -webkit-box-flex: 0 !important;
  -webkit-flex: 0 0 auto !important;
      -ms-flex: 0 0 auto !important;
          flex: 0 0 auto !important;
  background: #f2f2f3; }
  .code-block__header .select,
  .code-block__header .tablist {
    -webkit-transition: -webkit-transform 0.2s ease;
            transition: transform 0.2s ease; }
  .code-block__header .tablist {
    padding: 0; }

.code-block__code-container {
  overflow: auto;
  max-height: 100%; }

.code-block__toggler {
  background-color: #e3e4e6;
  width: 100%;
  border: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  font-size: 1.125rem;
  padding: 0.5rem 0;
  color: #9c9da5;
  -webkit-transition: background-color 0.2s ease;
          transition: background-color 0.2s ease; }
  .code-block__toggler:focus,
  .code-block__toggler:active {
    background-color: #e3e4e6;
    outline: none; }
  .code-block__toggler > .icon {
    margin-right: 0.5rem;
    opacity: 0.5; }

.code-block__content {
  overflow: hidden;
  -webkit-transition: height 0.3s ease;
          transition: height 0.3s ease;
  max-height: 15rem; }

.code-block__code {
  margin: 0;
  display: inline-block;
  padding: 0.5rem 1rem 1rem;
  font-size: 1rem;
  line-height: 1.3; }
  .code-block__code:focus {
    outline: none; }
  .code-block:not(.code-block--with-header):not(.code-block--condensed):not(.code-block--with-demo) .code-block__code {
    padding-top: 1rem; }
  .code-block--with-demo:not(.code-block--with-header) .code-block__code {
    padding-top: 0; }
  .code-block__code > code {
    font-family: Consolas, monospace;
    padding: 0;
    background-color: transparent;
    font-size: inherit !important;
    border: none; }

.hljs-value,
.hljs-string,
.hljs-preprocessor {
  color: #4196df; }

.hljs-symbol {
  color: #1a5cab; }

.hljs-at_rule,
.hljs-attribute,
.hljs-keyword {
  color: #4a4a4a; }

.hljs-comment {
  color: rgba(177, 177, 177, 0.5);
  font-style: italic; }

.hljs-tag,
.hljs-variable {
  color: #b1b1b1; }

.code-block--with-demo .code-block__content {
  padding-top: 0; }
  .code-block--with-demo .code-block__content > .code-block__header {
    padding-top: 0; }

.code-block__demo {
  padding: 1rem; }

.code-block__demo__content {
  display: none; }

.code-block__iframe {
  height: 10em;
  background-color: white;
  border: none;
  width: 100%;
  margin: 0;
  border-radius: 4px; }

.demo {
  background-color: white;
  min-height: 10rem; }

.demo__section {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
  background-color: white; }
  .demo__section ~ .demo__section {
    border-top: 1px solid #f1f1f1; }

.demo__header {
  box-sizing: border-box;
  margin-right: -0.5rem;
  padding: 0.5rem 1rem 0;
  text-align: right; }

.exploded--is-being-initialized .exploded__pane {
  -webkit-transition: -webkit-transform 0.25s ease;
          transition: transform 0.25s ease; }

.exploded__source,
.exploded__structure {
  padding: 1rem 2rem; }

.exploded__structure {
  position: relative;
  -webkit-perspective: 2000px;
          perspective: 2000px;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  cursor: pointer; }

.exploded__structure__content {
  position: relative;
  z-index: 0;
  margin: 0 auto; }

.exploded__control-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end;
  margin: 3rem -1rem 0; }

.exploded__control {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0;
      -ms-flex: 1 1 0;
          flex: 1 1 0;
  margin-left: 1rem; }
  .exploded__control:first-child {
    margin-left: 0; }

.exploded__pane {
  position: absolute;
  box-sizing: content-box;
  border-radius: 4px;
  background-color: rgba(156, 157, 165, 0.6);
  border: 1px solid rgba(227, 228, 230, 0.5);
  -webkit-transition: background 0.3s ease;
          transition: background 0.3s ease; }
  .exploded__pane:hover {
    background-color: #b7d6f6; }

.exploded__pane--is-selected, .exploded__pane--is-selected:hover {
  background: #8cc2fb;
  opacity: 1; }

.field {
  border-radius: 4px;
  background-color: #d1d3d7;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  max-width: 100%;
  padding: 0 0.5rem; }

.field--switch {
  padding: 0;
  background-color: transparent;
  position: relative; }
  .field--switch > .label {
    margin: 0;
    padding-left: 2.25rem;
    position: relative;
    line-height: 1.5rem;
    color: #6e6f7a; }
    .field--switch > .label:after {
      content: '';
      display: block;
      height: 1.05rem;
      width: 0.45rem;
      position: absolute;
      top: 0.75rem;
      left: 0.75rem;
      border-bottom: 2px solid #627990;
      border-right: 2px solid #627990;
      -webkit-transform: translate(-50%, -60%) rotate(45deg);
              transform: translate(-50%, -60%) rotate(45deg);
      display: none; }
    .field--switch > .label:before {
      content: '';
      display: block;
      height: 1.5rem;
      width: 1.5rem;
      background: #e3e4e6;
      position: absolute;
      top: 0;
      left: 0;
      border-radius: 4px; }
  .field--switch > .field__switch:checked + .label:before {
    background: #b7d6f6; }
  .field--switch > .field__switch:checked + .label:after {
    display: block; }
  .field--switch > .field__switch {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.1; }
  .field--switch + .field--switch {
    margin-top: 1rem; }

.field__icon {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  font-size: 0; }
  .field__icon > .icon {
    fill: #9c9da5;
    stroke: #9c9da5; }

.field__input {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 auto;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  margin: 0;
  padding: 0;
  background: transparent;
  border: none;
  line-height: 2.125rem;
  font-size: 1.1rem;
  font-family: Source Sans Pro, Helvetica Neue, Helvetica, Arial, sans-serif; }
  .field__input::-webkit-input-placeholder {
    color: rgba(156, 157, 165, 0.5); }
  .field__input::-moz-placeholder {
    color: rgba(156, 157, 165, 0.5); }
  .field__input:-ms-input-placeholder {
    color: rgba(156, 157, 165, 0.5); }
  .field__input::placeholder {
    color: rgba(156, 157, 165, 0.5); }
  .field__input:focus {
    outline: none; }

.page-header {
  background-color: #e3e4e6;
  padding: 1rem;
  padding-bottom: 1rem;
  min-height: 4.125rem; }
  .page-header .type--heading-1 {
    margin: -0.5em 0; }

.inline-group {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  margin-right: -0.5rem;
  margin-bottom: -0.5rem; }

.inline-group__item {
  margin-right: 0.5rem;
  margin-bottom: 0.5rem; }

.list {
  padding: 0;
  margin: 1rem 0 2rem;
  list-style: none; }
  .list .type--heading {
    padding-left: 1rem;
    padding-right: 1rem; }
  .popover .list {
    margin-bottom: 1rem; }

.list__item {
  display: block;
  padding: 0.25rem 1rem;
  cursor: pointer;
  text-decoration: none;
  color: #6e6f7a;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden; }
  .list__item:hover,
  .list__item:focus {
    outline: none;
    background: #f2f2f3; }
  .list__item:active {
    background-color: #b7d6f6;
    color: #627990; }

.list__item--is-active,
.list__item--is-active:hover,
.list__item--is-active:focus {
  background-color: #b7d6f6;
  color: #627990; }

.list__item--indented {
  padding-left: calc(1rem + 2ch);
  position: relative; }
  .list__item--indented:before {
    content: "";
    display: block;
    position: absolute;
    left: calc(1rem + 1ch);
    top: 0;
    height: 100%;
    width: 2px;
    background: rgba(30, 30, 31, 0.07); }
  .list__item--indented:last-child:before {
    height: 85%; }
  .list__item:not(.list__item--indented) + .list__item--indented:before {
    top: 15%;
    height: 85%; }

.link-list {
  padding: 0;
  margin: 0;
  list-style: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .link-list > li {
    position: relative;
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 auto;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto; }
    .link-list > li:after {
      content: "";
      position: absolute;
      top: 10%;
      right: -1px;
      -webkit-transform: rotate(15deg);
              transform: rotate(15deg);
      display: block;
      height: 80%;
      border-right: 2px solid rgba(110, 111, 122, 0.1); }
    .link-list > li:last-child:after {
      display: none;
      margin-right: 0; }

.link-list__item {
  position: relative;
  display: block;
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  background: none;
  border: none;
  opacity: 0.6;
  font-size: 1em;
  line-height: 1;
  color: #9c9da5;
  -webkit-transition: opacity 0.25s ease;
          transition: opacity 0.25s ease; }
  .link-list__item:hover,
  .link-list__item:focus {
    opacity: 1;
    outline: none; }

.unstyled-list {
  margin: 0;
  padding: 0;
  list-style: none; }
  .unstyled-list > li {
    margin: 2rem 0; }
    .unstyled-list > li:first-child {
      margin-top: 0; }

.details-sheet {
  max-width: 90%;
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background-color: white;
  border-radius: 0.4rem;
  box-shadow: 0 0 10px rgba(30, 30, 31, 0.3);
  z-index: 20;
  display: none; }

.details-sheet--is-active {
  display: block; }

.details-sheet__overlay {
  background: rgba(30, 30, 31, 0.9);
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 19;
  display: none; }

.details-sheet__overlay--is-active {
  display: block; }

.details-sheet__section {
  padding: 1rem; }
  .details-sheet__section + .details-sheet__section {
    border-top: 1px solid; }

.details-sheet__name {
  display: inline-block;
  padding: 0.1rem 0.25em;
  border-radius: 0.25em;
  color: #37393c;
  font-size: 1.2em;
  font-family: Consolas, monospace;
  margin: 0; }

.details-sheet__subtitle {
  margin: 0 0 0.5rem;
  font-size: 0.6rem;
  text-transform: uppercase;
  color: #37393c;
  opacity: 0.3;
  font-weight: 600; }

.notice {
  background-color: #fdf7af;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  color: #857e32;
  padding: 1rem;
  border-radius: 4px;
  font-size: 1.125rem;
  position: relative; }
  .notice .type, .notice p, .notice code {
    color: inherit;
    font-size: inherit; }
  .notice .type--heading {
    font-weight: 400; }

.notice--new {
  background-color: #b7d6f6;
  color: #627990; }

/*============================================================================
  Next Popover
 ==============================================================================*/
.popover__container {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  z-index: 20; }
  .popover__container > *:focus {
    outline: 0; }

.popover__container--contains-active-popover {
  z-index: 40; }

.popover__container--is-deactivating {
  z-index: 30; }

.popover__container--full-width {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.popover {
  position: absolute;
  left: 0;
  top: 100%;
  -webkit-transform: scale(0);
          transform: scale(0);
  display: inline-block;
  max-width: 100%;
  margin: 0.8125rem 1rem;
  background-color: white;
  border-radius: 4px;
  opacity: 0;
  box-shadow: 0 0 0 1px rgba(51, 54, 58, 0.05), 0 2px 7px 1px rgba(51, 54, 58, 0.16);
  -webkit-transition: -webkit-transform 0.35s cubic-bezier(0.27, 1.41, 0.53, 0.97), opacity 0.2s ease;
          transition: transform 0.35s cubic-bezier(0.27, 1.41, 0.53, 0.97), opacity 0.2s ease; }

.popover--is-active {
  -webkit-transform: scale(1);
          transform: scale(1);
  opacity: 1; }

.popover--is-positioned-above {
  top: auto;
  bottom: 100%; }
  .popover--is-positioned-above .popover__tooltip {
    top: 100%; }
    .popover--is-positioned-above .popover__tooltip:after {
      top: -0.3125rem; }

.popover__tooltip {
  position: absolute;
  left: 50%;
  top: -1.25rem;
  width: 1.25rem;
  height: 1.25rem;
  margin-left: -0.625rem;
  overflow: hidden; }
  .popover__tooltip:after {
    content: "";
    position: absolute;
    top: 0.9375rem;
    left: 50%;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    margin-left: -0.3125rem;
    display: block;
    height: 0.625rem;
    width: 0.625rem;
    background-color: white;
    box-shadow: 0 0 0 1px rgba(51, 54, 58, 0.05), 0 2px 7px 1px rgba(51, 54, 58, 0.16); }

.popover__content-wrapper {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 25rem;
  max-height: 50rem;
  border-radius: 4px;
  overflow: hidden; }

.popover__content {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  max-height: 100%;
  min-width: 9.375rem; }
  .popover__content > *:first-child {
    margin-top: 0; }
  .popover__content > *:last-child {
    margin-bottom: 0; }

.popover__pane {
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
      -ms-flex: 0 1 auto;
          flex: 0 1 auto;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  max-width: 100%; }

.range {
  width: 100%;
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  background-color: transparent; }
  .range:focus {
    outline: none; }

.range::-webkit-slider-runnable-track {
  width: 100%;
  height: 2.625rem;
  cursor: pointer;
  background-color: #d1d3d7;
  border-radius: 1.3125rem;
  padding: 0.2625rem; }

.range:focus::-webkit-slider-runnable-track {
  outline: none; }

.range::-moz-range-track {
  width: 100%;
  height: 2.625rem;
  cursor: pointer;
  background-color: #d1d3d7;
  border-radius: 1.3125rem;
  padding: 0.2625rem; }

.range::-ms-track {
  width: 100%;
  height: 2.625rem;
  cursor: pointer;
  background-color: #d1d3d7;
  border-radius: 1.3125rem;
  padding: 0.2625rem; }

.range::-webkit-slider-thumb {
  height: 2.1rem;
  width: 2.1rem;
  box-shadow: 1px 1px 3px rgba(30, 30, 31, 0.15);
  border-radius: 1.05rem;
  background: #f2f2f3;
  cursor: pointer;
  -webkit-appearance: none;
  appearance: none; }

.range::-moz-range-thumb {
  height: 2.1rem;
  width: 2.1rem;
  box-shadow: 1px 1px 3px rgba(30, 30, 31, 0.15);
  border-radius: 1.05rem;
  background: #f2f2f3;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none; }

.range::-ms-thumb {
  height: 2.1rem;
  width: 2.1rem;
  box-shadow: 1px 1px 3px rgba(30, 30, 31, 0.15);
  border-radius: 1.05rem;
  background: #f2f2f3;
  cursor: pointer;
  -webkit-appearance: none;
  appearance: none; }

.resizable {
  position: relative;
  margin: 0 auto;
  width: 100%;
  min-width: 19.25rem;
  border-radius: 4px;
  line-height: 0; }
  .resizable > .card {
    position: relative;
    padding-right: 1.25rem; }
  .resizable .iframe {
    width: 100%;
    min-height: 10rem;
    -webkit-transition: height 0.3s ease;
            transition: height 0.3s ease;
    overflow: hidden; }

.resizable--is-transitioning-width {
  -webkit-transition: width 0.3s ease;
          transition: width 0.3s ease; }

.resizable__handle {
  position: absolute;
  top: 0;
  right: 0;
  width: 1.25rem;
  height: 100%;
  cursor: col-resize;
  background: #d1d3d7;
  border-radius: 0 4px 4px 0; }
  .resizable__handle:hover,
  .resizable__handle:focus {
    outline: none; }
  .resizable__handle:after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    height: 2rem;
    width: 0.4375rem;
    margin-top: -1rem;
    margin-left: -0.21875rem;
    border-right: 1px solid #9c9da5;
    border-left: 1px solid #9c9da5; }

.resizable__actions {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end;
  margin-bottom: 0.5rem; }

.resizable__width-indicator {
  color: #b1b1b1;
  font: 300 1rem/1 Consolas, monospace;
  opacity: 0.4;
  -webkit-transition: opacity 0.3s ease;
          transition: opacity 0.3s ease; }

.resizable__width-indicator--is-visible {
  opacity: 1; }

.resizable__size-buttons {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.resizable__size-button {
  position: relative;
  margin-left: 0.5rem;
  cursor: pointer;
  opacity: 0.5;
  -webkit-transition: opacity 0.3s ease;
          transition: opacity 0.3s ease; }
  .resizable__size-button > .icon {
    height: 1.8rem;
    width: 1.8rem;
    fill: #e3e4e6;
    stroke: #e3e4e6;
    -webkit-transition: fill 0.3s ease;
            transition: fill 0.3s ease; }
  .resizable__size-button:hover,
  .resizable__size-button:focus,
  .resizable__size-button:active,
  .resizable__size-button.resizable__size-button--is-active {
    outline: none; }
  .resizable__size-button:hover,
  .resizable__size-button:focus {
    opacity: 0.8; }
  .resizable__size-button.resizable__size-button--is-active,
  .resizable__size-button:active {
    opacity: 1; }
    .resizable__size-button.resizable__size-button--is-active > .icon,
    .resizable__size-button:active > .icon {
      fill: #4196df;
      stroke: #4196df; }

.resizable__size-button--is-hidden {
  display: none; }

.scroll-container {
  overflow: hidden; }

.section {
  margin: 2rem 0;
  padding: 1rem 0; }
  .section > *:first-child,
  .section > *:first-child > *:first-child {
    margin-top: 0; }
  .section > *:last-child,
  .section > *:last-child > *:last-child {
    margin-bottom: 0; }

.section--small {
  border: none;
  padding: 0;
  margin: 1rem 0; }

.section--subdued {
  background: #f1f1f1;
  overflow: hidden; }
  .section--subdued.section--small {
    padding: 1rem 0;
    margin: 0; }

.section__container > .section:first-child {
  margin-top: 2rem; }

.section__container > .section:last-child {
  margin-bottom: 2rem; }

.section__container > .section--small:first-child {
  margin-top: 1rem; }

.section__container > .section--small:last-child {
  margin-bottom: 1rem; }

.select {
  position: relative;
  display: inline-block;
  border-radius: 4px;
  background-color: #e3e4e6; }
  .select:after {
    content: "";
    position: absolute;
    right: 0.75rem;
    top: 50%;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    display: block;
    height: 0.63281rem;
    width: 0.63281rem;
    margin-top: -0.47461rem;
    border: solid rgba(156, 157, 165, 0.5);
    border-width: 0 2px 2px 0;
    pointer-events: none; }
  .select + .docks-button {
    margin-left: 0.5rem; }

.select--is-focused {
  border-color: #4196df; }

.select--code > .select__input {
  font-family: Consolas, monospace; }

.select__input {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  display: block;
  width: 100%;
  max-width: none;
  height: auto;
  padding: 0 2.13281rem 0 0.75rem;
  background: transparent;
  border: none;
  font-size: 1.0125rem;
  line-height: 2.125rem;
  font-family: inherit;
  color: #9c9da5; }
  .select__input:focus {
    outline: none;
    border: none; }
  .select__input > option {
    color: #33363a; }

_:-ms-input-placeholder, :root .select__input::-ms-expand {
  display: none; }

_:-ms-input-placeholder, :root .select__input:focus::-ms-value {
  background: transparent; }

@supports (-moz-appearance: meterbar) and (background-blend-mode: difference, normal) {
  _::-moz-progress-bar,
  body:last-child .select__input__wrapper {
    overflow: hidden; }
  _::-moz-progress-bar,
  body:last-child .select__input {
    width: calc(100% + 30px); } }

.select__input:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 black; }

.table {
  width: 100%;
  min-width: 31.25rem;
  border-collapse: separate;
  border-spacing: 0; }

.table__container {
  margin: 1rem auto; }

.table__container--is-overflowing .table__cell:first-child {
  position: absolute;
  z-index: 20;
  left: 0;
  height: 100%;
  box-shadow: 3px 0 4px -1px rgba(30, 30, 31, 0);
  -webkit-transition: box-shadow 0.2s ease;
          transition: box-shadow 0.2s ease; }

.table__container--is-overflowing .table__actions {
  -webkit-transform: translateY(0);
          transform: translateY(0);
  max-height: 3rem;
  padding-bottom: 0.5rem; }

.table__scroller {
  max-width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch; }

.table__scroller--is-scrolled .table__cell:first-child {
  box-shadow: 3px 0 4px -1px rgba(30, 30, 31, 0.1); }

.table__backdrop {
  position: relative;
  z-index: 30;
  max-width: 100%;
  clear: both;
  overflow: hidden;
  border: 1px solid #f1f1f1;
  border-radius: 8px; }

.table__actions {
  -webkit-transform: translateY(140%);
          transform: translateY(140%);
  max-height: 0;
  float: right;
  -webkit-transition: -webkit-transform 0.3s cubic-bezier(0.32, 1.44, 0.46, 0.99), max-height 0.3s ease, padding-bottom 0.3s ease;
          transition: transform 0.3s cubic-bezier(0.32, 1.44, 0.46, 0.99), max-height 0.3s ease, padding-bottom 0.3s ease; }

.table__header {
  font-weight: 400;
  padding: 0;
  text-align: left; }

.table__body > .table__row:nth-child(odd) > .table__cell {
  background-color: #f8f8f8; }

.table__row {
  overflow: hidden; }

.table__cell {
  position: relative;
  z-index: 10;
  vertical-align: top;
  padding: 0.5rem;
  background-color: white; }

.table__cell--centered {
  text-align: center; }

.tablist {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 0.5rem;
  margin-right: -0.5rem;
  list-style: none; }

.tablist--large {
  margin: 2rem 0; }
  .tablist--large > .tablist__tab {
    font-size: 1.5rem;
    line-height: 1;
    padding: 1rem 2.5rem 1.2rem;
    border: none !important;
    opacity: 1 !important; }
  .tablist--large > .tablist__tab--is-active {
    background-color: #f2f2f3; }

.tablist__tab {
  display: inline-block;
  padding: 0 0.75rem;
  opacity: 0.3;
  overflow: hidden;
  border: 1px solid transparent;
  border-radius: 4px;
  -webkit-transition: opacity 0.3s ease, border-color 0.3s ease;
          transition: opacity 0.3s ease, border-color 0.3s ease;
  font-size: 1.125rem;
  line-height: 2.125rem;
  color: #9c9da5;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  text-overflow: ellipsis; }
  .tablist__tab:focus,
  .tablist__tab:hover {
    outline: none;
    opacity: 0.5; }
  .tablist__tab > .icon {
    height: 2rem;
    width: 2rem;
    fill: #d1d3d7;
    stroke: #d1d3d7;
    stroke-width: 3px; }

.tablist__tab--is-active, .tablist__tab--is-active:hover, .tablist__tab--is-active:focus {
  border-color: #9c9da5;
  opacity: 1; }

.tablist__tab__text {
  display: block; }

.tablist__panel {
  display: none; }

.tablist__panel--is-active {
  display: block; }

.vertical-spacer {
  margin: 0.5rem 0; }

.vertical-stack {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
          align-self: stretch;
  width: 100%; }

.vertical-stack__item {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0px;
      -ms-flex: 1 1 0px;
          flex: 1 1 0px;
  max-width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; }

.vertical-stack__item--fixed {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  overflow: visible; }

body {
  position: relative; }
  body.x-ray__helpers--x-ray-is-active {
    overflow: hidden; }

.x-ray {
  background: white;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: -1;
  overflow-x: hidden;
  overflow-y: auto;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
          transition: opacity 0.3s ease;
  min-height: 100%; }
  .x-ray .page-header {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 auto;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto; }

.x-ray--is-active {
  opacity: 1;
  z-index: 1200; }

.x-ray__content {
  padding-bottom: 3rem; }

.x-ray__list {
  padding: 1rem;
  background-color: #f2f2f3; }

.x-ray__closer {
  background: transparent;
  border: none;
  padding: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

.x-ray__diagram {
  padding: 1rem 0 0;
  background: #e3e4e6; }

.x-ray__details {
  display: none; }

.x-ray__details--is-visible {
  display: block; }

.x-ray__details__tagname {
  display: inline-block;
  font-size: 0.75em;
  background-color: #f2f2f3;
  padding: 0.3em 0.4em 0.2em;
  border-radius: 4px;
  line-height: 1;
  color: #9c9da5;
  margin-right: 0.25rem; }

.x-ray__details__description {
  margin-bottom: 2rem; }

.sidebar {
  position: absolute;
  left: 0;
  top: 0;
  -webkit-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0);
  -webkit-transition: -webkit-transform 0.2s ease;
          transition: transform 0.2s ease;
  max-width: 15rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100vh;
  background-color: white;
  box-shadow: 0 0 4px rgba(30, 30, 31, 0.3); }
  @media screen and (min-width: 40.0625rem) {
    .sidebar {
      position: static;
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); } }

.sidebar--is-active {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

.sidebar__toggler {
  background: transparent;
  padding: 0;
  margin: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none; }
  .sidebar__toggler:focus {
    outline: none; }

/*# sourceMappingURL=data:application/json;base64, */